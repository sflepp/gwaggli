<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="f5c384cc-a39b-480a-bc43-a936d9016f85" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/gwaggli-pipeline/src/domain/task/knowledge-loader.spec.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gwaggli-pipeline/src/domain/task/knowledge-loader.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gwaggli-pipeline/src/storage/knowledge-base/embeddings-knowledge-base.spec.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gwaggli-pipeline/src/storage/knowledge-base/embeddings-knowledge-base.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gwaggli-pipeline/src/storage/knowledge-base/entity/knowledge-base-entry.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gwaggli-pipeline/src/storage/knowledge-base/test-data/embeddings.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/jsLibraryMappings.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/gwaggli-events/src/events/pipeline-events.ts" beforeDir="false" afterPath="$PROJECT_DIR$/gwaggli-events/src/events/pipeline-events.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/gwaggli-pipeline/package-lock.json" beforeDir="false" afterPath="$PROJECT_DIR$/gwaggli-pipeline/package-lock.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/gwaggli-pipeline/package.json" beforeDir="false" afterPath="$PROJECT_DIR$/gwaggli-pipeline/package.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/gwaggli-pipeline/src/integration/openai/open-ai-client.ts" beforeDir="false" afterPath="$PROJECT_DIR$/gwaggli-pipeline/src/integration/openai/open-ai-client.ts" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="PackageJsonUpdateNotifier">
    <dismissed value="$PROJECT_DIR$/gwaggli-insights/package.json" />
    <dismissed value="$PROJECT_DIR$/gwaggli-pipeline/package.json" />
  </component>
  <component name="ProjectId" id="2RNLTLnYXjlUdJvT0EXVLpdpeNT" />
  <component name="ProjectViewState">
    <option name="autoscrollFromSource" value="true" />
    <option name="autoscrollToSource" value="true" />
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;//wsl$/Ubuntu-22.04/home/simon/prj/gwaggli/gwaggli-pipeline/src/storage/knowledge-base/test-data&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs.jest.jest_package&quot;: &quot;//wsl$/Ubuntu-22.04/home/simon/prj/gwaggli/gwaggli-pipeline/node_modules/jest&quot;,
    &quot;nodejs_interpreter_path&quot;: &quot;wsl://Ubuntu-22.04@/home/simon/.nvm/versions/node/v19.9.0/bin/node&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.lookFeel&quot;,
    &quot;ts.external.directory.path&quot;: &quot;\\\\wsl$\\Ubuntu-22.04\\home\\simon\\prj\\gwaggli\\gwaggli-events\\node_modules\\typescript\\lib&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="\\wsl$\Ubuntu-22.04\home\simon\prj\gwaggli\gwaggli-pipeline\src\storage\knowledge-base\test-data" />
      <recent name="\\wsl$\Ubuntu-22.04\home\simon\prj\gwaggli\gwaggli-pipeline\.elevenlabs" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="\\wsl$\Ubuntu-22.04\home\simon\prj\gwaggli\gwaggli-pipeline\src\storage\vector-db" />
      <recent name="\\wsl$\Ubuntu-22.04\home\simon\prj\gwaggli" />
    </key>
  </component>
  <component name="RunManager" selected="Jest.knowledge-loader">
    <configuration name="embeddings-knowledge-base" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <jest-package value="$PROJECT_DIR$/gwaggli-pipeline/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$/gwaggli-pipeline" />
      <envs />
      <scope-kind value="SUITE" />
      <test-file value="$PROJECT_DIR$/gwaggli-pipeline/src/storage/knowledge-base/embeddings-knowledge-base.spec.ts" />
      <test-names>
        <test-name value="embeddings-knowledge-base" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="embeddings-knowledge-base.it should add entries" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <jest-package value="$PROJECT_DIR$/gwaggli-pipeline/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$/gwaggli-pipeline" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/gwaggli-pipeline/src/storage/knowledge-base/embeddings-knowledge-base.spec.ts" />
      <test-names>
        <test-name value="embeddings-knowledge-base" />
        <test-name value="it should add entries" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="embeddings-knowledge-base.it should search entries" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <jest-package value="$PROJECT_DIR$/gwaggli-pipeline/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$/gwaggli-pipeline" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/gwaggli-pipeline/src/storage/knowledge-base/embeddings-knowledge-base.spec.ts" />
      <test-names>
        <test-name value="embeddings-knowledge-base" />
        <test-name value="it should search entries" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="knowledge-loader" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <jest-package value="$PROJECT_DIR$/gwaggli-pipeline/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$/gwaggli-pipeline" />
      <envs />
      <scope-kind value="SUITE" />
      <test-file value="$PROJECT_DIR$/gwaggli-pipeline/src/domain/task/knowledge-loader.spec.ts" />
      <test-names>
        <test-name value="knowledge-loader" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="build" type="js.build_tools.npm" temporary="true" nameIsGenerated="true">
      <package-json value="$PROJECT_DIR$/gwaggli-pipeline/package.json" />
      <command value="run" />
      <scripts>
        <script value="build" />
      </scripts>
      <node-interpreter value="project" />
      <envs />
      <method v="2" />
    </configuration>
    <configuration name="gwaggli-insights start" type="js.build_tools.npm">
      <package-json value="$PROJECT_DIR$/gwaggli-insights/package.json" />
      <command value="run" />
      <scripts>
        <script value="start" />
      </scripts>
      <node-interpreter value="project" />
      <envs />
      <method v="2" />
    </configuration>
    <configuration name="gwaggli-pipeline dev" type="js.build_tools.npm">
      <package-json value="$PROJECT_DIR$/gwaggli-pipeline/package.json" />
      <command value="run" />
      <scripts>
        <script value="dev" />
      </scripts>
      <node-interpreter value="project" />
      <envs />
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Jest.embeddings-knowledge-base" />
      <item itemvalue="Jest.embeddings-knowledge-base.it should add entries" />
      <item itemvalue="Jest.embeddings-knowledge-base.it should search entries" />
      <item itemvalue="Jest.knowledge-loader" />
      <item itemvalue="npm.gwaggli-pipeline dev" />
      <item itemvalue="npm.gwaggli-insights start" />
      <item itemvalue="npm.build" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Jest.knowledge-loader" />
        <item itemvalue="Jest.embeddings-knowledge-base" />
        <item itemvalue="Jest.embeddings-knowledge-base.it should search entries" />
        <item itemvalue="Jest.embeddings-knowledge-base.it should add entries" />
        <item itemvalue="npm.build" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="f5c384cc-a39b-480a-bc43-a936d9016f85" name="Changes" comment="" />
      <created>1687085605777</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1687085605777</updated>
      <workItem from="1687085610927" duration="1476000" />
      <workItem from="1687091527446" duration="64000" />
      <workItem from="1687091636952" duration="56000" />
      <workItem from="1687091703000" duration="2175000" />
      <workItem from="1687093983689" duration="24000" />
      <workItem from="1687094109081" duration="298000" />
      <workItem from="1687094429579" duration="1825000" />
      <workItem from="1687180722532" duration="2481000" />
      <workItem from="1687198505541" duration="3516000" />
      <workItem from="1687680903719" duration="51000" />
      <workItem from="1687681004893" duration="300000" />
      <workItem from="1687681422158" duration="2842000" />
      <workItem from="1687721157030" duration="656000" />
      <workItem from="1687768341178" duration="16550000" />
      <workItem from="1688388396856" duration="17841000" />
      <workItem from="1688801711752" duration="15280000" />
      <workItem from="1688917780134" duration="741000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="XSLT-Support.FileAssociations.UIState">
    <expand />
    <select />
  </component>
</project>