<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="f5c384cc-a39b-480a-bc43-a936d9016f85" name="Changes" comment="Enable git-lfs">
      <change afterPath="$PROJECT_DIR$/gwaggli-insights/src/pages/data-loader/DataLoader.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gwaggli-insights/src/ui-components/file-selector.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gwaggli-pipeline/.gitattributes" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gwaggli-pipeline/__test-data__/data-loader/zip/example-data-1.zip" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gwaggli-pipeline/__test-data__/data-loader/zip/example-data-2.zip" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gwaggli-pipeline/src/domain/data-loader/loaders/in-memory-zip-loader.spec.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gwaggli-pipeline/src/domain/data-loader/loaders/inline-zip-loader.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gwaggli-pipeline/src/integration/openai/open-ai-client.spec.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/helpful-links.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.gitignore" beforeDir="false" afterPath="$PROJECT_DIR$/.gitignore" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/gwaggli-events/src/events/pipeline-events.ts" beforeDir="false" afterPath="$PROJECT_DIR$/gwaggli-events/src/events/pipeline-events.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/gwaggli-insights/src/App.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/gwaggli-insights/src/App.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/gwaggli-insights/src/env.ts" beforeDir="false" afterPath="$PROJECT_DIR$/gwaggli-insights/src/env.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/gwaggli-insights/src/pages/AppLayout.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/gwaggli-insights/src/pages/AppLayout.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/gwaggli-insights/src/pages/debugger/Debugger.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/gwaggli-insights/src/pages/debugger/Debugger.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/gwaggli-pipeline/__test-data__/data-loader/pdf/git.pdf" beforeDir="false" afterPath="$PROJECT_DIR$/gwaggli-pipeline/__test-data__/data-loader/pdf/git.pdf" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/gwaggli-pipeline/package-lock.json" beforeDir="false" afterPath="$PROJECT_DIR$/gwaggli-pipeline/package-lock.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/gwaggli-pipeline/package.json" beforeDir="false" afterPath="$PROJECT_DIR$/gwaggli-pipeline/package.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/gwaggli-pipeline/src/domain/data-loader/loader-factory.ts" beforeDir="false" afterPath="$PROJECT_DIR$/gwaggli-pipeline/src/domain/data-loader/loader-factory.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/gwaggli-pipeline/src/domain/data-loader/loader.ts" beforeDir="false" afterPath="$PROJECT_DIR$/gwaggli-pipeline/src/domain/data-loader/loader.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/gwaggli-pipeline/src/domain/data-loader/loaders/directory-loader.ts" beforeDir="false" afterPath="$PROJECT_DIR$/gwaggli-pipeline/src/domain/data-loader/loaders/directory-loader.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/gwaggli-pipeline/src/domain/data-loader/parser-factory.ts" beforeDir="false" afterPath="$PROJECT_DIR$/gwaggli-pipeline/src/domain/data-loader/parser-factory.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/gwaggli-pipeline/src/domain/task/knowledge-loader.ts" beforeDir="false" afterPath="$PROJECT_DIR$/gwaggli-pipeline/src/domain/task/knowledge-loader.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/gwaggli-pipeline/src/domain/task/text-completion.ts" beforeDir="false" afterPath="$PROJECT_DIR$/gwaggli-pipeline/src/domain/task/text-completion.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/gwaggli-pipeline/src/index.ts" beforeDir="false" afterPath="$PROJECT_DIR$/gwaggli-pipeline/src/index.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/gwaggli-pipeline/src/integration/openai/open-ai-client.ts" beforeDir="false" afterPath="$PROJECT_DIR$/gwaggli-pipeline/src/integration/openai/open-ai-client.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/gwaggli-pipeline/src/pipeline.ts" beforeDir="false" afterPath="$PROJECT_DIR$/gwaggli-pipeline/src/pipeline.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/gwaggli-pipeline/src/storage/knowledge-base/embeddings-knowledge-base.spec.ts" beforeDir="false" afterPath="$PROJECT_DIR$/gwaggli-pipeline/src/storage/knowledge-base/embeddings-knowledge-base.spec.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/gwaggli-pipeline/src/storage/knowledge-base/embeddings-knowledge-base.ts" beforeDir="false" afterPath="$PROJECT_DIR$/gwaggli-pipeline/src/storage/knowledge-base/embeddings-knowledge-base.ts" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="PackageJsonUpdateNotifier">
    <dismissed value="$PROJECT_DIR$/gwaggli-insights/package.json" />
    <dismissed value="$PROJECT_DIR$/gwaggli-pipeline/package.json" />
  </component>
  <component name="ProjectId" id="2RNLTLnYXjlUdJvT0EXVLpdpeNT" />
  <component name="ProjectViewState">
    <option name="autoscrollFromSource" value="true" />
    <option name="autoscrollToSource" value="true" />
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
    "WebServerToolWindowFactoryState": "false",
    "git-widget-placeholder": "main",
    "ignore.virus.scanning.warn.message": "true",
    "javascript.nodejs.core.library.configured.version": "20.4.0",
    "javascript.nodejs.core.library.typings.version": "20.4.0",
    "last_opened_file_path": "/home/simon/projects/gwaggli/gwaggli-pipeline",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs.jest.jest_package": "/home/simon/projects/gwaggli/gwaggli-pipeline/node_modules/jest",
    "nodejs_interpreter_path": "/home/simon/.nvm/versions/node/v20.4.0/bin/node",
    "nodejs_package_manager_path": "npm",
    "project.structure.last.edited": "Global Libraries",
    "project.structure.proportion": "0.0",
    "project.structure.side.proportion": "0.2",
    "settings.editor.selected.configurable": "settings.nodejs",
    "ts.external.directory.path": "/home/simon/projects/gwaggli/gwaggli-pipeline/node_modules/typescript/lib",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/gwaggli-pipeline/__test-data__/pdf" />
      <recent name="$PROJECT_DIR$/gwaggli-pipeline/src/domain/data-loader/parsers/__test-data__/pdf" />
      <recent name="$PROJECT_DIR$/gwaggli-pipeline/input/knowledge-base" />
      <recent name="\\wsl$\Ubuntu-22.04\home\simon\prj\gwaggli\gwaggli-pipeline\src\storage\knowledge-base\test-data" />
      <recent name="\\wsl$\Ubuntu-22.04\home\simon\prj\gwaggli\gwaggli-pipeline\.elevenlabs" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/ignored" />
      <recent name="$PROJECT_DIR$/gwaggli-pipeline/__test-data__/data-loader" />
      <recent name="$PROJECT_DIR$/gwaggli-pipeline" />
      <recent name="$PROJECT_DIR$/gwaggli-pipeline/src/domain/data-loader/parsers" />
      <recent name="$PROJECT_DIR$/gwaggli-pipeline/input" />
    </key>
  </component>
  <component name="RunManager" selected="npm.gwaggli-pipeline dev">
    <configuration name="messages should fit into token limit" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <jest-package value="$PROJECT_DIR$/gwaggli-pipeline/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$/gwaggli-pipeline" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/gwaggli-pipeline/src/integration/openai/open-ai-client.spec.ts" />
      <test-names>
        <test-name value="messages should fit into token limit" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="should be possible to search even if no data is available" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <jest-package value="$PROJECT_DIR$/gwaggli-pipeline/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$/gwaggli-pipeline" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/gwaggli-pipeline/src/storage/knowledge-base/embeddings-knowledge-base.spec.ts" />
      <test-names>
        <test-name value="should be possible to search even if no data is available" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="should be possible to search for more entries than available" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <jest-package value="$PROJECT_DIR$/gwaggli-pipeline/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$/gwaggli-pipeline" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/gwaggli-pipeline/src/storage/knowledge-base/embeddings-knowledge-base.spec.ts" />
      <test-names>
        <test-name value="should be possible to search for more entries than available" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="should load a full directory" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <jest-package value="$PROJECT_DIR$/gwaggli-pipeline/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$/gwaggli-pipeline" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/gwaggli-pipeline/src/domain/data-loader/loaders/directory-loader.spec.ts" />
      <test-names>
        <test-name value="should load a full directory" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="should load a zip file" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <jest-package value="$PROJECT_DIR$/gwaggli-pipeline/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$/gwaggli-pipeline" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/gwaggli-pipeline/src/domain/data-loader/loaders/in-memory-zip-loader.spec.ts" />
      <test-names>
        <test-name value="should load a zip file" />
      </test-names>
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Jest.gwaggli-pipeline test" />
      <item itemvalue="Jest.messages should fit into token limit" />
      <item itemvalue="Jest.should be possible to search even if no data is available" />
      <item itemvalue="Jest.should be possible to search for more entries than available" />
      <item itemvalue="Jest.should load a full directory" />
      <item itemvalue="Jest.should load a zip file" />
      <item itemvalue="npm.gwaggli-pipeline dev" />
      <item itemvalue="npm.gwaggli-insights start" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Jest.messages should fit into token limit" />
        <item itemvalue="Jest.should be possible to search even if no data is available" />
        <item itemvalue="Jest.should be possible to search for more entries than available" />
        <item itemvalue="Jest.should load a zip file" />
        <item itemvalue="Jest.should load a full directory" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="f5c384cc-a39b-480a-bc43-a936d9016f85" name="Changes" comment="" />
      <created>1687085605777</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1687085605777</updated>
      <workItem from="1687085610927" duration="1476000" />
      <workItem from="1687091527446" duration="64000" />
      <workItem from="1687091636952" duration="56000" />
      <workItem from="1687091703000" duration="2175000" />
      <workItem from="1687093983689" duration="24000" />
      <workItem from="1687094109081" duration="298000" />
      <workItem from="1687094429579" duration="1825000" />
      <workItem from="1687180722532" duration="2481000" />
      <workItem from="1687198505541" duration="3516000" />
      <workItem from="1687680903719" duration="51000" />
      <workItem from="1687681004893" duration="300000" />
      <workItem from="1687681422158" duration="2842000" />
      <workItem from="1687721157030" duration="656000" />
      <workItem from="1687768341178" duration="16550000" />
      <workItem from="1688388396856" duration="17841000" />
      <workItem from="1688801711752" duration="15280000" />
      <workItem from="1688917780134" duration="741000" />
      <workItem from="1688992760557" duration="8097000" />
      <workItem from="1689095350474" duration="8005000" />
      <workItem from="1689367297420" duration="79000" />
      <workItem from="1689367396889" duration="30073000" />
    </task>
    <task id="LOCAL-00001" summary="Enable git-lfs">
      <option name="closed" value="true" />
      <created>1689449674471</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1689449674471</updated>
    </task>
    <option name="localTasksCounter" value="2" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Enable git-lfs" />
    <option name="LAST_COMMIT_MESSAGE" value="Enable git-lfs" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="javascript">
          <url>file://$PROJECT_DIR$/gwaggli-pipeline/node_modules/gpt-tokenizer/src/GptEncoding.ts</url>
          <line>245</line>
          <properties lambdaOrdinal="-1" />
          <option name="timeStamp" value="10" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="javascript">
          <url>file://$PROJECT_DIR$/gwaggli-pipeline/src/integration/openai/open-ai-client.ts</url>
          <line>37</line>
          <properties lambdaOrdinal="-1" />
          <option name="timeStamp" value="17" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="javascript">
          <url>file://$PROJECT_DIR$/gwaggli-pipeline/src/integration/openai/open-ai-client.ts</url>
          <line>25</line>
          <properties lambdaOrdinal="-1" />
          <option name="timeStamp" value="18" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
  <component name="XSLT-Support.FileAssociations.UIState">
    <expand />
    <select />
  </component>
</project>